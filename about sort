#pragma once
#include <iostream>
using namespace std;
#include <assert.h>

namespace SORT_TOPIC
{

	void BubbleSort(int* arr, int len)
	{
		assert(arr);
		int i = 0;
		int j = 0;
		for (i = 0; i < len - 1; i++)
		{
			bool flag = true;
			for (j = 0; j < len - 1 - i; j++)
			{
				if (arr[j] > arr[j + 1])
				{
					swap(arr[j], arr[j + 1]);
					flag = false;
				}
			}
			if (flag)
				break;
		}
	}

	void TestBubbleSort()
	{
		int arr[] = { 25, 63, 24, 4, 78, 15, 1, 413, 2 ,57 };
		int len = sizeof(arr) / sizeof(arr[0]);
		BubbleSort(arr, len);
		for (int i = 0; i < len; i++)
		{
			cout << arr[i] << " ";
		}
		cout << endl;
	}

	void SelectionSort(int* a, int len)
	{
		assert(a);
		int i = 0;
		int j = 0;
		for (i = 0; i < len - 1; i++)
		{
			int min = i;
			for (j = i + 1; j < len;j++)
			{
				if (a[min] > a[j])
					min = j;
			}
			if (min != i)
				swap(a[min], a[i]);
		}
	}

	void TestSelectionSort()
	{
		int arr[] = { 25, 63, 24, 4, 78, 15, 1, 413, 2, 57 };
		int len = sizeof(arr) / sizeof(arr[0]);
		SelectionSort(arr, len);
		for (int i = 0; i < len; i++)
		{
			cout << arr[i] << " ";
		}
		cout << endl;
	}

	void InsertSort(int* a, int len)
	{
		assert(a);
		int i = 0;
		int j = 0;
		for (i = 0; i < len-1; i++)
		{
			for (j = i; j >= 0; j--)
			{
				if (a[j] > a[j + 1])
				{
					swap(a[j], a[j + 1]);
				}
				else
					break;
			}
		}
	}

	void TestInsertSort()
	{
		int arr[] = { 25, 63, 24, 4, 78, 15, 1, 413, 2, 57 };
		int len = sizeof(arr) / sizeof(arr[0]);
		InsertSort(arr, len);
		for (int i = 0; i < len; i++)
		{
			cout << arr[i] << " ";
		}
		cout << endl;
	}
}
